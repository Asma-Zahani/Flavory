unit dans ingredient et non dans recipe_ingredient
recipe ingredient clé primaire composé ( recipe_id, ingredient_id, type)

⚙️ Fonctionnalités du site :
- Les utilisateurs peuvent créer un compte et se connecter. ✅
- Ils peuvent voir les recettes avec les ingrédients et les étapes. ✅
- Ils peuvent chercher une recette par nom, ingrédient ou filtrer par catégorie. ✅
- Ils peuvent ajouter une recette avec une photo et une description. ✅
- Ils peuvent commenter une recette. 
- Ils peuvent tester une recette et noter (par étoiles) et ajouter leurs propres photos dans leur avis.
- Ils peuvent mettre une recette en favori. ✅
- Ils peuvent modifier ou supprimer leurs recettes. ✅ //si il y a un possibilité de rendre sauf le user dans le backend
- L’administrateur peut gérer les utilisateurs et supprimer les recettes ou commentaires inappropriés.

- Authentification (inscription/connexion)
- Affichage des recettes avec les ingrédients et les étapes
- Ajout/modification/suppression de recettes
- Recherche et filtrage
- Commentaires et likes
- Profil utilisateur


flavory/
├── public/                     # Images, favicon, etc.
│   ├── images/
│   │   ├── logo.png
│   │   ├── hero.jpg
│   │   └── recettes/
│   └── icons/
│
├── src/
│   ├── app/                    # ✅ (si tu utilises App Router de Next.js 13+)
│   │   ├── layout.tsx          # Layout global
│   │   ├── page.tsx            # Page d’accueil
│   │
│   │   ├── about/
│   │   │   └── page.tsx        # Page À propos
│   │
│   │   ├── contact/
│   │   │   └── page.tsx        # Page Contact
│   │
│   │   ├── recettes/           # Dossier des recettes
│   │   │   ├── page.tsx        # Liste des recettes
│   │   │   ├── [id]/page.tsx   # Page d’une recette spécifique
│   │   │   ├── ajouter/page.tsx # Formulaire pour ajouter une recette
│   │   │   └── favoris/page.tsx # Recettes favorites
│   │
│   │   ├── profil/
│   │   │   └── page.tsx        # Profil utilisateur
│   │
│   │   ├── auth/               # Authentification (Login / Register)
│   │   │   ├── login/page.tsx
│   │   │   └── register/page.tsx
│   │
│   │   ├── api/                # Routes API côté serveur
│   │   │   ├── recettes/
│   │   │   │   ├── route.ts    # CRUD recettes
│   │   │   ├── comments/
│   │   │   │   └── route.ts    # API commentaires
│   │   │   └── users/
│   │   │       └── route.ts    # API utilisateurs
│   │
│   │   ├── not-found.tsx       # Page 404 personnalisée
│   │   └── loading.tsx         # Animation de chargement globale
│
│   ├── components/             # 🧱 Composants réutilisables
│   │   ├── layout/
│   │   │   ├── Navbar.tsx
│   │   │   ├── Footer.tsx
│   │   │   └── Sidebar.tsx
│   │   ├── ui/                 # Boutons, cartes, formulaires, etc.
│   │   │   ├── Button.tsx
│   │   │   ├── CardRecipe.tsx
│   │   │   ├── InputField.tsx
│   │   │   └── RatingStars.tsx
│   │   ├── sections/           # Sections spécifiques aux pages
│   │   │   ├── HeroSection.tsx
│   │   │   ├── AboutSection.tsx
│   │   │   └── ContactForm.tsx
│
│   ├── lib/                    # ⚙️ Fonctions utilitaires
│   │   ├── db.ts               # Connexion à la base de données (ex: Prisma)
│   │   ├── auth.ts             # Fonctions d’authentification
│   │   ├── fetcher.ts          # Appels API front-end
│   │   └── validators.ts       # Validation de données
│
│   ├── styles/
│   │   ├── globals.css         # Styles globaux
│   │   └── animations.css      # (ex: si tu veux customiser AOS)
│
│   ├── hooks/                  # Custom React hooks
│   │   ├── useAuth.ts
│   │   ├── useFavorites.ts
│   │   └── useScrollPosition.ts
│
│   ├── context/                # Contexte global (React Context)
│   │   └── AuthContext.tsx
│
│   └── types/                  # Types TypeScript
│       ├── recipe.ts
│       ├── user.ts
│       └── comment.ts
│
├── .env                        # Variables d’environnement (ex: DB, API keys)
├── tailwind.config.ts
├── tsconfig.json
├── next.config.mjs
└── package.json